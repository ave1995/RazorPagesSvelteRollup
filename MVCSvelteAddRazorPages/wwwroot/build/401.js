var unauthorized = function () { "use strict"; function t() { } function e(t) { return t() } function n() { return Object.create(null) } function o(t) { t.forEach(e) } function r(t) { return "function" == typeof t } function c(t, e) { return t != t ? e == e : t !== e || t && "object" == typeof t || "function" == typeof t } function u(t) { t.parentNode && t.parentNode.removeChild(t) } let s; function i(t) { s = t } const a = [], f = []; let l = []; const d = [], h = Promise.resolve(); let $ = !1; function p(t) { l.push(t) } const g = new Set; let m = 0; function y() { if (0 !== m) return; const t = s; do { try { for (; m < a.length;){ const t = a[m]; m++, i(t), _(t.$$) } } catch (t) { throw a.length = 0, m = 0, t } for (i(null), a.length = 0, m = 0; f.length;)f.pop()(); for (let t = 0; t < l.length; t += 1){ const e = l[t]; g.has(e) || (g.add(e), e()) } l.length = 0 } while (a.length); for (; d.length;)d.pop()(); $ = !1, g.clear(), i(t) } function _(t) { if (null !== t.fragment) { t.update(), o(t.before_update); const e = t.dirty; t.dirty = [-1], t.fragment && t.fragment.p(t.ctx, e), t.after_update.forEach(p) } } const b = new Set; function x(t, e) { const n = t.$$; null !== n.fragment && (!function (t) { const e = [], n = []; l.forEach((o => -1 === t.indexOf(o) ? e.push(o) : n.push(o))), n.forEach((t => t())), l = e }(n.after_update), o(n.on_destroy), n.fragment && n.fragment.d(e), n.on_destroy = n.fragment = null, n.ctx = []) } function v(t, e) { -1 === t.$$.dirty[0] && (a.push(t), $ || ($ = !0, h.then(y)), t.$$.dirty.fill(0)), t.$$.dirty[e / 31 | 0] |= 1 << e % 31 } function k(c, a, f, l, d, h, $, g = [-1]) { const m = s; i(c); const _ = c.$$ = { fragment: null, ctx: [], props: h, update: t, not_equal: d, bound: n(), on_mount: [], on_destroy: [], on_disconnect: [], before_update: [], after_update: [], context: new Map(a.context || (m ? m.$$.context : [])), callbacks: n(), dirty: g, skip_bound: !1, root: a.target || m.$$.root }; $ && $(_.root); let x = !1; if (_.ctx = f ? f(c, a.props || {}, ((t, e, ...n) => { const o = n.length ? n[0] : e; return _.ctx && d(_.ctx[t], _.ctx[t] = o) && (!_.skip_bound && _.bound[t] && _.bound[t](o), x && v(c, t)), e })) : [], _.update(), x = !0, o(_.before_update), _.fragment = !!l && l(_.ctx), a.target) { if (a.hydrate) { const t = function (t) { return Array.from(t.childNodes) }(a.target); _.fragment && _.fragment.l(t), t.forEach(u) } else _.fragment && _.fragment.c(); a.intro && ((k = c.$$.fragment) && k.i && (b.delete(k), k.i(E))), function (t, n, c, u) { const { fragment: s, after_update: i } = t.$$; s && s.m(n, c), u || p((() => { const n = t.$$.on_mount.map(e).filter(r); t.$$.on_destroy ? t.$$.on_destroy.push(...n) : o(n), t.$$.on_mount = [] })), i.forEach(p) }(c, a.target, a.anchor, a.customElement), y() } var k, E; i(m) } class E{ $destroy() { x(this, 1), this.$destroy = t } $on(e, n) { if (!r(n)) return t; const o = this.$$.callbacks[e] || (this.$$.callbacks[e] = []); return o.push(n), () => { const t = o.indexOf(n); -1 !== t && o.splice(t, 1) } } $set(t) { var e; this.$$set && (e = t, 0 !== Object.keys(e).length) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1) } } function w(e) { let n; return { c() { var t, e, o, r; t = "div", n = document.createElement(t), n.innerHTML = '<h1 class="text-danger">401 Unathorized Access</h1>', e = n, o = "class", null == (r = "container text-center") ? e.removeAttribute(o) : e.getAttribute(o) !== r && e.setAttribute(o, r) }, m(t, e) { !function (t, e, n) { t.insertBefore(e, n || null) }(t, n, e) }, p: t, i: t, o: t, d(t) { t && u(n) } } } function A(t) { return [] } const O = t => { const e = document.querySelector(`input#${t}[type=hidden]`); if (!e) return ""; const n = e.value; return e.remove(), n }; var j, z; return new class extends E{ constructor(t) { super(), k(this, t, A, w, c, {}) } }({ target: document.body, props: null !== (z = "Unauthorized", console.log(`init ${z}`), O("title"), O("cache-version"), O("url-prefix"), j = { user: "", theme: "" }) && void 0 !== j ? j : {} }) }();
